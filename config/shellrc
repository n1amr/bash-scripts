################################################################################
###############################  Initialization  ###############################

# Determine shell type
unset SHELLNAME
if [ -n "$BASH_VERSION" ]; then
    SHELLNAME=bash
elif [ -n "$ZSH_VERSION" ]; then
    SHELLNAME=zsh
else
    echo 'Shell type not supported by this script'
    return
fi

MY_HOME="$HOME"
DOTFILES_HOME="$MY_HOME/.dotfiles"

init_config_file () {
    echo "Note: Creating new config file."
    echo -n \
"""\
#!/bin/bash

export MY_HOME='$MY_HOME'
export DOTFILES_HOME='$DOTFILES_HOME'
""" >> "$DOTFILES_CONFIG_FILE"
}

# Load config file
DOTFILES_CONFIG_FILE=~/.dotfiles_config
[ -f "$DOTFILES_CONFIG_FILE" ] && source "$DOTFILES_CONFIG_FILE" || init_config_file

# Initialize shell
HISTFILE=~/.zsh_history
HISTSIZE=10000000
SAVEHIST=$HISTSIZE
HISTCONTROL='ignoreboth'

if [ $SHELLNAME = zsh ]; then
    export ZSH="$DOTFILES_HOME/thirdparty/oh-my-zsh"

    ZSH_THEME="n1amr"
    ENABLE_CORRECTION="true"
    DISABLE_UNTRACKED_FILES_DIRTY="true"

    plugins=(command-not-found common-aliases dircycle dirhistory extract git history jump pip rsync z)
    source $ZSH/oh-my-zsh.sh
elif [ $SHELLNAME = bash ]; then
    source "$DOTFILES_HOME/config/bash-init.sh"
fi

################################################################################
###########################  Environment variables  ############################

export NAME='Amr Alaa'
export EMAIL='n1amr1@gmail.com'
export DDNS='n1amr.ddns.net'
export SSH_KEY_PATH="~/.ssh/id_rsa"

API_KEYS_FILE="$DOTFILES_HOME/config/secret/api_keys"
[ -f "$API_KEYS_FILE" ] && source "$API_KEYS_FILE"

export D='/mnt/Storage'
export GDRIVE="$DOTFILES_CONFIG_GOOGLE_DRIVE_ROOT"

export EDITOR='vim'
export VISUAL="$EDITOR"

export SUDO_PROMPT=${SUDO_PROMPT:-"[sudo] password for %u on %h: "}

if [ "$(tty | grep -o '/dev/tty')" = "/dev/tty" ]; then
  export IS_TTY=1
else
  export IS_TTY=0
fi

################################################################################
####################################  PATH  ####################################

export ANDROID_HOME="$D/ubuntu/usr/local/android-sdk"

export PATH="$MY_HOME/.pyenv/bin:$PATH"
export PATH="$MY_HOME/.rbenv/bin:$PATH"
export PATH="$MY_HOME/.rbenv/plugins/ruby-build/bin:$PATH"
eval "$( type pyenv > /dev/null 2>&1 && pyenv init -)"
eval "$( type rbenv > /dev/null 2>&1 && rbenv init -)"
export PATH="$DOTFILES_HOME/bin:$PATH"

################################################################################
#################################  Functions  ##################################

print_welcome () {
    [ "$COLUMNS" -gt "98" ] && echo -e \
"""\
\e[1;31m         _                               _   \e[1;34m                  _                                _  \e[m\n\
\e[1;31m  _ __  / |  __ _  _ __ ___   _ __  _   | |  \e[1;34m __      __  ___ | |  ___   ___   _ __ ___    ___ | | \e[m\n\
\e[1;31m | '_  \| | / _\` || '_ \` _  \| '__|(_) / __) \e[1;34m \ \ /\ / / / _ \| | / __| / _ \ | '_ \` _  \ / _ \| | \e[m\n\
\e[1;31m | | | || || (_| || | | | | || |    _  \__ \ \e[1;34m  \ V  V / |  __/| || (__ | (_) || | | | | ||  __/|_| \e[m\n\
\e[1;31m |_| |_||_| \__,_||_| |_| |_||_|   (_) (   / \e[1;34m   \_/\_/   \___||_| \___| \___/ |_| |_| |_| \___|(_) \e[m\n\
\e[1;31m                                        |_|  \e[1;34m                                                      \e[m\
"""
}

block_caret () {
    tput cnorm '\e[?8c'
    tput cvvis '\e[?8c'
}

init_fzf () {
    if [ $SHELLNAME = zsh ]; then
        [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
    elif [ $SHELLNAME = bash ]; then
        [ -f ~/.fzf.bash ] && source ~/.fzf.bash
    fi
}

init_powerline () {
    POWERLINE_ROOT="$(pip show powerline-status | grep -Po '(?<=Location: ).*')/powerline"

    powerline-daemon -q
    POWERLINE_BASH_CONTINUATION=1
    POWERLINE_BASH_SELECT=1

    if [ $SHELLNAME = zsh ]; then
        if [ -r $POWERLINE_ROOT/bindings/zsh/powerline.zsh ]; then
            source $POWERLINE_ROOT/bindings/zsh/powerline.zsh
        fi
    elif [ $SHELLNAME = bash ]; then
        if [ -r $POWERLINE_ROOT/bindings/bash/powerline.sh ]; then
            source $POWERLINE_ROOT/bindings/bash/powerline.sh
        fi
    fi
}

reset_keybindings () {
    if [ $SHELLNAME = zsh ]; then
        [ "$1" = 'vi' ] && bindkey -v
        source "$DOTFILES_HOME/config/keybindings.zsh"
    elif [ $SHELLNAME = bash ]; then
        [ "$1" = 'vi' ] && set -o vi
        source "$DOTFILES_HOME/config/keybindings.bash"
    fi
}

terminal_resize () {
    eval `/usr/bin/resize | head -2`
}

################################################################################
##################################  Aliases  ###################################

alias apt='sudo apt'
alias battery='upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E "state|to\ full|percentage"'
alias beep='paplay /home/n1amr/.local/Schedule.ogg'
alias c='clear'
alias cape='toggle_swapescape'
alias clock='tty-clock -scn -C 2'
alias clr='clear'
alias cp='cp -i'
alias dl='trash -v'
alias f='find .'
alias fgrep='grep -F'
alias g='grep'
alias gdplshared='drive pull -ignore-name-clashes --ignore-conflict'
alias gist='gistey -sf'
alias gitnext="git checkout \`git log --reverse --ancestry-path HEAD..master --oneline | head -1 | awk '{print \$1}'\`"
alias gitprev='git checkout HEAD~'
alias gp='grep -P --color=auto'
alias h='history'
alias hgp="fc -El 0 | grep"
alias hbackup='yes | cp ~/.${SHELLNAME}_history ~/.${SHELLNAME}_history.bak;'
alias hrestore='yes | cp ~/.${SHELLNAME}_history.bak ~/.${SHELLNAME}_history; for i in {0..10000}; do echo; done; /usr/bin/clear; cd ~; exec ${SHELLNAME}'
alias ipy="ipython"
alias ipython="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"
alias j='jump'
alias k='cdtree'
alias l='ls -lgoh'
alias la='ls -lAFh'
alias ll='ls -l'
alias ls='ls --color=yes'
alias m='mark'
alias matlab-cli='DISPLAY='' matlab'
alias mkdir='mkdir -pv'
alias mv='mv -i'
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'
alias myips='ip addr | grep -Po '\''inet6? (addr:)?\s?((([0-9]+\.){3}[0-9]+)|[a-fA-F0-9:]+)'\'' | awk '\''{ sub(/inet6? (addr:)? ?/, ""); print }'\'''
alias nmcli='nmcli -a'
alias o='gui-open'
alias p='ipython'
alias psg='ps aux | grep -v grep | grep -i -e VSZ -e'
alias pss='ps -e lx'
alias py='python -c'
alias qcommit='git add -A && git commit -m "$(date)"'
alias r='ranger'
alias ranger='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR"'
alias rb='ruby -e'
alias rm='rm -i'
alias s='subl -a'
alias sshot='screenshot-nicename /mnt/Storage/Pictures/Screenshots/*from*'
alias shellrc="\$EDITOR $DOTFILES_HOME/config/shellrc"
alias sync='sudo "$(which syncf)"'
alias t='tmux'
alias tf='tail -f'
alias twitter='/home/n1amr/.rbenv/shims/t'
alias u='up'
alias updatepip='pip install -U pip $(pip freeze --local | grep -v ^-e | cut -d = -f 1 | sort | /usr/bin/tr "\n" " ")'
alias v='vim'
alias vi='vim'
alias vim-server='vim --servername "$(tmux list-sessions | grep attached | cut -d: -f1)"'
alias vibindkey='reset_keybindings vi'
alias wget='wget -c'

if [ $SHELLNAME = zsh ]; then
    alias -g 'CP=| xsel -ib'
    alias -g 'G=| grep -P'
    alias -g 'S=| subl'
    alias -g 'V=| vim -'
fi

################################################################################
#################################  PS1 create  #################################

reset_ps1() {
    if [ $SHELLNAME = zsh ]; then
        export PS1=\
$'%{\e[0m%}'\
$'%{\e[1;31m%}%n@%m'\
$'%{\e[0m%}:'\
$'%{\e[1;34m%}%~'\
$'%{\e[0;36m%}`__ps1_pyenv_version`'\
$'%{\e[1;35m%}`__ps1_git_branch`'\
$'%{\e[2;32m%}`__ps1_command_eval`'\
$'%{\e[0m%}\n '\
$'%{\e[0;32m%}`[ $USER = "root" ] || echo "$"`'\
$'%{\e[0;31m%}`[ $USER = "root" ] && echo "#"`'\
$'%{\e[0m%} '

    elif [ $SHELLNAME = bash ]; then
        export PS1=\
'\[\e[m\]'\
'${debian_chroot:+($debian_chroot) }'\
'\[\e[1;31m\]\u@\h'\
'\[\e[m\]:'\
'\[\e[1;34m\]\w'\
'\[\e[0;36m\]$(__ps1_pyenv_version)'\
'\[\e[1;35m\]$(__ps1_git_branch)'\
'\[\e[2;32m\]$(__ps1_command_eval)'\
'\[\e[m\]\n '\
'\[\e[0;32m\]`[ $USER = "root" ] || echo "$"`'\
'\[\e[0;31m\]`[ $USER = "root" ] && echo "#"`'\
'\[\e[m\] '

    fi

    ps1_command_reset
}

__ps1_git_branch () {
    git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/ (\1)/'
}

__ps1_pyenv_version () {
    echo "${PYENV_VERSION:+ (${PYENV_VERSION})}" 2>/dev/null
}

# PS1 extention
__ps1_command_eval() {
    type ps1_command > /dev/null 2>&1 && echo -e " {{ $(ps1_command) }}"; }
ps1_command_reset() {
    type ps1_command > /dev/null 2>&1 && unset -f ps1_command; }

ps1_time() {
    ps1_command() { date +%T; }
}

ps1_words() {
    ps1_command() { shuf '/mnt/Storage/Documents/Reader/Languages/English/English Words/all-words.txt' | head -1; }
}

ps1_all_words() {
    ps1_command() { shuf /usr/share/dict/words | head -1; }
}

ps1_memory() {
    ps1_command() { free -m | head -2 | tail -1 | awk '{printf "%d/%d\n", $3, $2}'; }
}

################################################################################
################################  Finalization  ################################

# Options
if [ $SHELLNAME = zsh ]; then
    unsetopt EXTENDED_HISTORY
elif [ $SHELLNAME = bash ]; then
    shopt -s autocd
    shopt -s globstar
fi

stty stop undef # to unmap ctrl-s

EXTRA_FUNCTIONS="$DOTFILES_HOME/bin/extra-functions"
[ -f "$EXTRA_FUNCTIONS" ] && source "$EXTRA_FUNCTIONS"

# terminal_resize
reset_ps1
reset_keybindings vi
block_caret
swapescape enable
