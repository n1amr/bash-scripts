execute pathogen#infect()

set number
set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab
set smartindent
set pastetoggle=<F10>
set cursorline
set mouse=a
set ignorecase
set wildignorecase " for ex-mode autocompletion
set timeoutlen=50
set relativenumber

noremap <c-k> :m-2<CR>
noremap <c-j> :m+<CR>

" noremap <c-s-up> :m-2<CR>
" noremap <c-s-down> :m+<CR>

" nnoremap <Space> i_<Esc>r

" nnoremap <C-L> <Esc>
" inoremap <C-L> <Esc>
" vnoremap <C-L> <Esc>
" onoremap <C-L> <Esc>

" tab indenting
" nnoremap <TAB> >>
" nnoremap <S-TAB> <<

" vnoremap <expr> // 'y/\V'.escape(@",'\').'<CR>'
" vnoremap // y/\V<C-R>"<CR>

" nnoremap <silent> <F5> :w<CR>:!clear;python %<CR>

" nnoremap <C-c> :let @+ = getreg('"')<CR>
" vnoremap <C-c> "+y
" vnoremap <C-x> "+d
" vnoremap <C-v> "+p
" inoremap <C-v> <C-r>+

" change cursor shape in different modes
if has("autocmd")
  au VimEnter,InsertLeave * silent execute '!echo -ne "\e[1 q"' | redraw!
  au InsertEnter,InsertChange *
    \ if v:insertmode == 'i' |
    \   silent execute '!echo -ne "\e[5 q"' | redraw! |
    \ elseif v:insertmode == 'r' |
    \   silent execute '!echo -ne "\e[3 q"' | redraw! |
    \ endif
  au VimLeave * silent execute '!echo -ne "\e[ q"' | redraw!
endif

" NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'

" Airline
let g:airline_powerline_fonts = 1
let g:airline_theme="powerlineish"
let g:airline#extensions#tabline#enabled = 1
set laststatus=2

" gvim config
if has("gui_running")
  set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ Book\ 12
  set guioptions=agimLt
  set lines=999 columns=999

  function! FontSizePlus ()
    let l:gf_size_whole = matchstr(&guifont, '\( \)\@<=\d\+$')
    let l:gf_size_whole = l:gf_size_whole + 1
    let l:new_font_size = ' '.l:gf_size_whole
    let &guifont = substitute(&guifont, ' \d\+$', l:new_font_size, '')
  endfunction

  function! FontSizeMinus ()
    let l:gf_size_whole = matchstr(&guifont, '\( \)\@<=\d\+$')
    if l:gf_size_whole >= 1
      let l:gf_size_whole = l:gf_size_whole - 1
    endif
    let l:new_font_size = ' '.l:gf_size_whole
    let &guifont = substitute(&guifont, ' \d\+$', l:new_font_size, '')
  endfunction

  nnoremap <C-F11> :call FontSizePlus()<CR>
  nnoremap <S-F11> :call FontSizeMinus()<CR>

  " pass F11 press to system to enable fullscreen
  noremap <silent> <F11> :call system("wmctrl -ir " . v:windowid . " -b toggle,fullscreen")<CR>
endif

set background=dark
color chroma
