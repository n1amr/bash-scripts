#!/bin/bash

source ~/.dotfiles.env

MIXER='pulse'
DELTA="${2:-5}"

notify () {
    paplay "$DOTFILES_HOME/resources/sounds/audio-volume-change.oga" &
    notify-send -a volumectl -t 500 -i stock_volume "Volume: $(print_level)"
}

get_level () {
    amixer -D "$MIXER" sget Master | grep "Front $1" | grep -Po '(?<=\[)\d+(?=\%\])'
}

print_level () {
    left_level="$(get_level 'Left')"
    right_level="$(get_level 'Right')"
    if [[ "$left_level" = "$right_level" ]]; then
        echo "$left_level%"
    else
        echo "Left=$left_level%, Right=$right_level%"
    fi
}

volume_set () {
    volume_unmute
    amixer -D "$MIXER" sset Master "$@"
}

volume_up () {
    volume_unmute
    # pactl set-sink-volume 0 +5%
    amixer -D "$MIXER" sset Master "${DELTA}%+"
}

volume_down () {
    volume_unmute
    # pactl set-sink-volume 0 -5%
    amixer -D "$MIXER" sset Master "${DELTA}%-"
}

volume_mute_toggle () {
    pactl set-sink-mute 0 toggle
}

volume_unmute () {
    pactl set-sink-mute 0 off
}

case "$1" in
    up)          volume_up                && notify ;;
    down)        volume_down              && notify ;;
    mute-toggle) volume_mute_toggle       && notify ;;
    set)         shift && volume_set "$@" && notify ;;
    get)         print_level                        ;;
    notify)      print_level && notify              ;;
    *)           echo "Error in arguments: $@"      ;;
esac
