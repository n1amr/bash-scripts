[alias]
    a = add
    br = branch
    c = commit
    co = checkout
    df = diff
    mt = mergetool
    st = status

    l = log --graph --pretty=longline
    ll = log --graph
    lp = log --graph --patch
    rb = rebase -i
    rbc = rebase --continue
    rl = log --walk-reflogs --pretty=reflog-short
    rll = log --walk-reflogs --pretty=reflog-long

    rbb = "!f() { count="$1"; shift; git rebase -i "$@" "HEAD~${count}"; }; f"
    go = "!f() { git-browse "$@"; }; f"
    create-github = "!f() { git-create-github "$@"; }; f"
    create-gitlab = "!f() { git-create-gitlab "$@"; }; f"
    next = "!f() { branch="$[1:-master]"; git checkout \"$(git log --reverse --ancestry-path HEAD.."$branch" --oneline | head -1 | awk '{print $1}')\"; }; f"
    prev = checkout HEAD~
    recommit = "!f() { echo \"$(git l -1)\" && old_msg=\"$(git log -1 --format='%s')\" && git reset --soft HEAD~ && git commit -m \"$old_msg\"; }; f"
    cleanup = "!f() { git fsck && git prune && git reflog expire --expire=now --all && git repack -ad && git prune; }; f"
    author-date = "!f() { git filter-branch -f --env-filter 'GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE; export GIT_COMMITTER_DATE' HEAD~\"${1:-1}\"..HEAD; }; f"
    backup = "!f() { local branch_name="${1:-$(git rev-parse --abbrev-ref HEAD)}"; local tag_name="BACKUP/${branch_name}-$(date +"%Y-%m-%d_%H-%M-%S")"; git tag "$tag_name" "${1:-HEAD}" && echo "Created tag: $tag_name"; }; f"

[core]
    editor = vim
    pager = less
    excludesfile = ~/.gitignore
    autocrlf = input

[color]
    ui = true

[format]
    pretty = default

[pretty]
    default = %C(bold white)--------------------------------------------------------------------------------%n%C(reset)\
Commit: %C(bold red)%H%C(dim white)%d%C(reset)%n\
Author: %C(bold blue)%an <%ae>%C(reset)%n\
Date:   %ci %C(green)(%cr)%C(reset)%n\
%n%w(0,4,4)%B%w(0,0,0)%-
    detailed = %C(bold white)--------------------------------------------------------------------------------%n%C(reset)\
Commit Hash:     %C(bold red)%H%C(dim white)%d%C(reset)%n\
Parent Hashes:   %C(bold red)%P%C(reset)%n\
Tree Hash:       %C(bold red)%T%C(reset)%n\
Author:          %C(bold blue)%an <%ae>%C(reset)%n\
Author Date:     %ai %C(green)(%ar)%C(reset)%n\
Committer:       %C(bold blue)%cn <%ce>%C(reset)%n\
Committer Date:  %ci %C(green)(%cr)%C(reset)%n\
Reflog Selector: %C(yellow)%gd%C(reset)%n\
Reflog Subject:  %gs%C(reset)%n\
%n%w(0,4,4)%B%w(0,0,0)%-
    reflog-short = %C(reset)%C(bold red)%h <- %p%C(reset) - %C(yellow)%gd%C(dim white)%d%C(reset) - %ci %C(green)(%cr)%C(reset): %gs
    reflog-long = %C(bold white)--------------------------------------------------------------------------------%n%C(reset)\
Reflog Subject:  %gs%C(reset)%n\
Reflog Selector: %C(yellow)%gd%C(dim white)%d%C(reset)%n\
Commit Hash:     %C(bold red)%H%C(reset)%n\
Parent Hashes:   %C(bold red)%P%C(reset)%n\
Author:          %C(bold blue)%an <%ae>%C(reset)%n\
Committer Date:  %ci %C(green)(%cr)%C(reset)%n\
%n%w(0,4,4)%B%w(0,0,0)%-
    longline = %C(bold red)%h%C(reset) - %s %C(green)(%cr) %C(bold blue)<%an>%C(dim white)%d%C(reset)
    longline-iso = %C(bold red)%h %C(reset)[%ci]: %s %C(green)(%cr) %C(bold blue)<%an - %ae>%C(dim white)%d%C(reset)

[pager]
    diff = true
    log = true
    show = true
    status = false

[diff]
    tool = vimdiff

[merge]
    tool = customVimMergeTool # vimdiff

[mergetool "customVimMergeTool"]
    cmd = vim -d -f --cmd 'let g:isMergeTool = 1' -c '4wincmd w | wincmd J' $LOCAL $BASE $REMOTE $MERGED

[grep]
    linenumber = true

[user]
    name = Amr Alaa
    email = n1amr1@gmail.com
    signingkey = 7C837246

[credential]
    helper = cache

[commit]
    gpgsign = false
    verbose = true

[push]
    default = upstream

[url "git@github.com:"]
    pushInsteadOf = "github:"

[url "https://github.com/"]
    insteadOf = "github:"

[url "git@gitlab.com:"]
    pushInsteadOf = "gitlab:"

[url "https://gitlab.com/"]
    insteadOf = "gitlab:"

[url "git://gist.github.com/"]
    insteadOf = "gist:"

[gitflow "branch"]
    master = master
    develop = develop

[gitflow "prefix"]
    bugfix = bugfix/
    feature = feature/
    hotfix = hotfix/
    release = release/
    support = support/
    versiontag = ""
