#!/bin/bash

set -e

repo_name="$1"
TOKEN_FILE="$DOTFILES_HOME/data/gitlab_token"

if [[ -x "$TOKEN_FILE" ]]; then
    source "$TOKEN_FILE"
else
    echo "Please enter a new private token. From https://gitlab.com/profile/account"
    echo -n ">>> "
    read -r GITLAB_PRIVATE_TOKEN
    echo "export GITLAB_PRIVATE_TOKEN = ${GITLAB_PRIVATE_TOKEN}" > "${TOKEN_FILE}"
    chmod +x "$TOKEN_FILE"
fi

private_token="$GITLAB_PRIVATE_TOKEN"
url="https://gitlab.com/api/v3/projects?private_token=$private_token"

if ! git status > /dev/null && [[ ! -d .git ]]; then
    git init
fi

if [[ -z "$repo_name" ]]; then
    repo_name="$(basename "$(git rev-parse --show-toplevel)")"
fi
repo_name="$(echo -n "$repo_name" | tr -c '[:alnum:] -_' '_')"

temp_file="$(mktemp .gitlab-create-response-XXXXX.tmp.html)"
trap 'rm "$temp_file"' EXIT

echo wget --header='Content-Type:application/json' "${url}" --post-data="{ \"name\": \"${repo_name}\" }" -O "$temp_file"
wget --header='Content-Type:application/json' "${url}" --post-data="{ \"name\": \"${repo_name}\" }" -O "$temp_file"
r=$?
repo_path="$(grep -Po '(?<=path_with_namespace":")(.*?)(?=")' "$temp_file")"
repo_link="git@gitlab.com:$repo_path"

if [[ $r == 0 ]] && [[ -n "$repo_link" ]]; then
    echo "Created repo successfully [$repo_link]"
else
    echo "Error ($r)"
    exit $r
fi

remote_name='origin'
if git remote -v | grep -P '^origin' > /dev/null; then
    remote_name='gitlab'
    git remote -v
    echo "Remote name 'origin' is already used."
    echo -n "Enter remote name [$remote_name]: "
    read -r remote_name
fi
echo "Remote name is $remote_name"

git remote add "$remote_name" "$repo_link"
echo "Added remote name is $remote_name"
git remote -v
