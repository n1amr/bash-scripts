#!/bin/bash

source ~/.dotfiles.env
source "$DOTFILES_HOME/bin/lib/log"
PATH="$DOTFILES_HOME/bin:$PATH"

config_file="$DOTFILES_HOME/custom/config/dotfiles/wifi-check-list.sh"
[ -f "$config_file" ] || {
    echo "#!/bin/sh"
    echo "set -eu"
    echo "# Enter wifi SSID list here"
    echo "wifi_ordered_list=("
    echo ")"
} > "$config_file"
source "$config_file"

DEVICE="$(nmcli dev | grep wifi | cut -d ' ' -f 1)"

status() {
    nmcli d | grep "$DEVICE" | grep -Po '\S*connected'
}

active_connection() {
    nmcli --fields DEVICE,NAME con show --active | grep -Po "(?<=$DEVICE  )(.*)(?= )"
}

disconnect() {
    old_connection="$(active_connection)"
    if [ -n "$old_connection" ]; then
        nmcli connection down "$old_connection" && 
            info "disconnected $old_connection"
    else
        error "could not disconnect \"$old_connection\""
    fi
}

testnet_and_exit () {
    current_status="$(status)"
    current_active_connection="$(active_connection)"
    info "Status: $current_status, Active connection: $current_active_connection"
    info "Testing internet access..."
    testnet > /dev/null 2>&1
    testnet_status="$?"
    if [[ "$testnet_status" = '0' ]]; then
        info "Has access to internet using \"$current_active_connection\""
        exit 0
    else
        error "Has no access to internet using \"$current_active_connection\""
        return 1
    fi
}

current_status="$(status)"
if [[ "$(status)" = "connected" ]]; then
    current_active_connection="$(active_connection)"
    info "Connected to $current_active_connection"
    for id in "${wifi_keep_connected[@]}"; do
        if [[ "$current_active_connection" == "$id" ]]; then
            testnet_and_exit || break
        fi
    done
fi

for id in "${wifi_ordered_list[@]}"; do
    current_status="$(status)"
    info "Testing connection \"$id\""
    if [[ "$(status)" = "connected" ]]; then
        current_active_connection="$(active_connection)"
        if [[ "$current_active_connection" = "$id" ]]; then
            info "Already connected to $current_active_connection"
        fi
    else
        info "Connecting to \"$id\"..."
        timeout 5s nmcli connection up id "$id"

        info "Connected to \"$id\""
    fi
    testnet_and_exit
done

error "All possible connections failed."
testnet_and_exit
