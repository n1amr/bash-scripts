#!/bin/bash

source ~/.dotfiles_config
if [ -z "$DOTFILES_CONFIG_VPN_HOME" ]; then
    echo -n 'Enter vpn home directory: '
    read DOTFILES_CONFIG_VPN_HOME
    echo "export DOTFILES_CONFIG_VPN_HOME='$DOTFILES_CONFIG_VPN_HOME'" >> ~/.dotfiles_config
fi

VPN_HOME="$DOTFILES_CONFIG_VPN_HOME"

vpnconnections=(
    ca1.vpnbook.com\
    de233.vpnbook.com\
    euro214.vpnbook.com\
    euro217.vpnbook.com\
    us1.vpnbook.com\
    us2.vpnbook.com\
)

mkdir -p "$VPN_HOME/credentials"
cd "$VPN_HOME/credentials"
credentials_filename='current'

# Initialiaze options
no_prompt="false"

# Read options
for i in "$@"; do
    case $i in
    --no-prompt)
        no_prompt="true"
    ;;
    esac
done

echo -e "Trying to update vpn credentials..."

echo "Fetching from http://www.vpnbook.com/freevpn"
cred=$(wget http://www.vpnbook.com/freevpn -qO - | grep -Po '(Password|Username)[^\r\n]*' | grep -Po '(?<=>)\w+?(?=<)' | head -2)
if [ -z "$cred" -a x"$no_prompt" == x"false" ]; then
    read -n 1 -p 'Fetch from twitter? (y/n) '
    echo
    if [[ $REPLY =~ ^[yY]$ ]]; then
        echo "Fetching from https://twitter.com/vpnbook"
        cred=$(/usr/bin/env t timeline vpnbook | head -2 | tail -1 | grep -Po 'Username.*' | sed 's/ /\n/g' | grep -Pv ':')
    fi
fi
if [ -z "$cred" -a x"$no_prompt" == x"false" ]; then
    read -n 1 -p 'Enter manually? (y/n) '
    echo
    if [[ $REPLY =~ ^[yY]$ ]]; then
        echo -n "Enter username: "
        read username
        echo -n "Enter password: "
        read password
        cred="$(echo -e "$username\n$password")"
    fi
fi

[[ -n "$cred" ]] && echo "$cred" > credentials.tmp && successful='true'
if [ x"$successful" != x'true' ]; then
    echo Cannot retrieve data!
    rm -f credentials.tmp
    exit
fi

echo -e "\nNew credenatials:" &&
cat credentials.tmp &&
echo

# Prompt before modifying
if [ x"$no_prompt" == x"false" ]; then
    read -n 1 -p "Save? (y/n) "
    echo
    [[ $REPLY =~ ^[Yy]$ ]] || exit
fi

# Update history
if [ ! -d backup ]; then mkdir backup; fi
if [ -f "$credentials_filename" ]; then
    mv "$credentials_filename" "backup/$(date +'%F-%H-%M-%S')"
fi
mv credentials.tmp "$credentials_filename"
echo "Saved to $(realpath \"$credentials_filename\")"

# Update credentials in vpn connections
new_password=$(cat "$credentials_filename" | tail -1)
for v in "${vpnconnections[@]}"; do
    nmcli connection modify "$v" vpn.secrets "password = $new_password" &&
    echo "Updated $v successfully"
done
