#!/bin/bash

DESTINATION_DIR="/media/n1amr/backup-hdd/ubuntu"
if [ ! -d "$DESTINATION_DIR" ]; then
    echo "Destination directory not found: $DESTINATION_DIR"
    exit 1
fi

BACKUP_ROOT_DIR="$DESTINATION_DIR/backups"

source ~/.dotfiles_config
CONFIG_DIR="$DOTFILES_HOME/data/sync.rc"

timestamp="$(date +%F-%H-%M-%S)"

INCLUDES_FILE="$CONFIG_DIR/includes"
EXCLUDES_FILE="$CONFIG_DIR/excludes"
BACKUP_CLEAN_FILE="$CONFIG_DIR/backup-clean-files"
OUTPUT_FILE=/dev/tty
ERRORS_LOG_FILE=/dev/tty
CLEAN_OUTPUT_FILE=/dev/tty
CLEAN_ERRORS_LOG_FILE=/dev/tty

LOG_DIR="$BACKUP_ROOT_DIR/backup-logs"
LOG_FILE="$LOG_DIR/log"

if [ "$1" == "file" ] || [ "$2" == "file" ]; then
    OUTPUT_FILE="$LOG_DIR/${timestamp}-output"
    ERRORS_LOG_FILE="$LOG_DIR/${timestamp}-errors-log"
    CLEAN_OUTPUT_FILE="$LOG_DIR/${timestamp}-clean-output"
    CLEAN_ERRORS_LOG_FILE="$LOG_DIR/${timestamp}-clean-error-log"
fi

backup_dir="$BACKUP_ROOT_DIR/backup-${timestamp}"

if [ ! -d "$LOG_DIR" ]; then
    mkdir "$LOG_DIR"
fi

if [ "$1" == "more" ] || [ "$2" == "more" ]; then
    EXCLUDES_FILE="$CONFIG_DIR/excludes-more"
fi

trap 'exit 2' INT

while IFS='' read -r line || [ -n "$line" ]; do
    if [ ! "${line:0:1}" = "#" ] && [ x"$line" != x ]; then
        echo "Syncing \"$line\" ..." >> "$OUTPUT_FILE"
        rsync -av --delete --relative --log-file="$LOG_FILE" --exclude-from="$EXCLUDES_FILE" -b --backup-dir="$backup_dir" "$line" "$DESTINATION_DIR" >> "$OUTPUT_FILE" 2>> "$ERRORS_LOG_FILE"
    fi
done < "$INCLUDES_FILE"

echo "finished syncing" >> "$OUTPUT_FILE"

################################################################################
###############################  Clean backups  ################################

echo "cleaning backups..." >> "$CLEAN_OUTPUT_FILE"

shopt -s dotglob

for f in "$BACKUP_ROOT_DIR/backup-2"*; do
    if [ -d "$f" ]; then
        echo "Cleaning backup directory \"$f\"" >> "$CLEAN_OUTPUT_FILE"

        while IFS='' read -r line || [ -n "$line" ]; do
            find "$f" | grep -F "$line" | xargs -d '\n' rm -rfv >> "$CLEAN_OUTPUT_FILE" 2>> "$CLEAN_ERRORS_LOG_FILE"
        done < "$BACKUP_CLEAN_FILE"

        rsync -a --progress --remove-source-files "$f/" "$BACKUP_ROOT_DIR/backup" >> "$CLEAN_OUTPUT_FILE" 2>> "$CLEAN_ERRORS_LOG_FILE"
    fi

    find "$f" -type d -empty -delete >> "$CLEAN_OUTPUT_FILE" 2>> "$CLEAN_ERRORS_LOG_FILE"
done
