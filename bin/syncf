#!/bin/bash

set -e

source ~/.dotfiles.env
source "$DOTFILES_HOME/bin/lib/log"
source "$DOTFILES_HOME/bin/lib/assert_file"

PATH="$DOTFILES_HOME/bin/:$PATH"

info "Started at $(date)"

SYNCF_RC="$DOTFILES_HOME/custom/config/dotfiles/syncf"

profile="${1:-default}"
info "Selected profile: $profile"

profile_file="$SYNCF_RC/profiles/$profile"
assert_file "$profile_file"

export SYNCF_RC
source "$profile_file"

required_parameters=(
    DESTINATION_DIR
    INCLUDES_FILE
)

for param_name in "${required_parameters[@]}"; do
    param_value="${!param_name}"
    info "$param_name=$param_value"
    if [[ -z "$param_value" ]]; then
        error "$param_name has no value in profile file."
        exit 1
    fi
done

if [ ! -d "$DESTINATION_DIR" ]; then
    error "Destination directory not found: $DESTINATION_DIR"
    exit 1
fi

EXCLUDES_FILE="${EXCLUDES_FILE:-$SYNCF_RC/default-excludes}"
assert_file "$EXCLUDES_FILE"

BACKUP_CLEAN_FILE="${BACKUP_CLEAN_FILE:-$SYNCF_RC/default-backup-clean-files}"
assert_file "$BACKUP_CLEAN_FILE"

BACKUP_ROOT_DIR="${BACKUP_ROOT_DIR:-$DESTINATION_DIR.backups}"
timestamp="$(dotfiles-timestamp)"
backup_dir="$BACKUP_ROOT_DIR/backup-${timestamp}"
log_file="$BACKUP_ROOT_DIR/logs/backup-${timestamp}.log"
assert_file "$log_file"

info "Logging to $log_file"

trap 'exit 2' INT

RSYNC_ARGS=(-av --delete --relative --exclude-from="$EXCLUDES_FILE")
# RSYNC_ARGS+=(--delete-excluded)
RSYNC_ARGS+=(--log-file="$log_file")

BACKUP_DISABLE="${BACKUP_DISABLE:-false}"
if [[ "$BACKUP_DISABLE" = "false" ]]; then
    info "Backup is enabled"
    RSYNC_ARGS+=(-b --backup-dir="$backup_dir")
fi

set +e
while IFS='' read -r line; do
    if echo "$line" | grep -P "^\s*#"; then
        info "Ignored $line"
        continue
    fi
    info "Syncing $line ..."
    info rsync "${RSYNC_ARGS[@]}" "$line" "$DESTINATION_DIR"
    rsync "${RSYNC_ARGS[@]}" "$line" "$DESTINATION_DIR"
done < "$INCLUDES_FILE"
set -e
info "Finished syncing"

[[ "$BACKUP_DISABLE" = "true" ]] && exit

shopt -s dotglob

info "Cleaning backups..."
for bd in "$BACKUP_ROOT_DIR/backup-2"*; do
    if [ -d "$bd" ]; then
        info "Cleaning backup directory \"$bd\" ..."
        while IFS='' read -r line; do
            path="$bd$line"
            if [ -e "$path" ]; then
                info "Cleaning $path"
                rm -rfv "$bd$line"
            fi
        done < "$BACKUP_CLEAN_FILE"

        rsync -av --progress --remove-source-files "$bd/" "$BACKUP_ROOT_DIR/backup/"
        find "$bd" -type d -empty -delete
    fi
done
