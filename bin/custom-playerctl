#!/bin/bash

cmus_is_running() {
    if cmus-remote -Q > /dev/null 2>&1; then
        return 0
    fi
    return 1
}

cmus_status() {
    if ! cmus_is_running; then
        echo "Not available"
        return 1
    fi
    status="$(cmus-remote -Q | grep '^status' | cut -d ' ' -f 2)"
    status="$(tr '[:lower:]' '[:upper:]' <<< ${status:0:1})${status:1}"
    echo "$status"
}

cmus_perform_action() {
    action="$1"
    case "$action" in
        play)      cmus-remote -p ;;
        pause)     cmus-remote -u ;;
        stop)      cmus-remote -s ;;
        next)      cmus-remote -n ;;
        previous)  cmus-remote -r ;;
        status)  
            cmus_status || exit 1
        ;;
        play-pause)  
            if [[ "$(cmus_status)" != 'Playing' ]]; then
                cmus-remote -p
            else
                cmus-remote -u
            fi
        ;;
    esac
}

cmus_metadata() {
    tag="$1"

    result=''
    if [[ -z "$tag" ]]; then
        result="$(cmus_metadata title) - $(cmus_metadata artist)"
    elif [[ "$tag" = "file" ]]; then
        result="$(cmus-remote -Q | grep "^file " | sed "s/^file //")"
    else
        result="$(cmus-remote -Q | grep "^tag $tag" | sed "s/^tag $tag //")"
    fi

    echo -n "$result"
}

playerctl_with_player() {
    if [[ -z "$player" ]]; then
        playerctl "$@"
    else
        playerctl -p "$player" "$@"
    fi
}

list_players() {
    if cmus_is_running; then
        echo 'cmus'
    fi
    playerctl_with_player -l 2>/dev/null
}

get_art_file() {
    temp_dir='/tmp/album-arts'
    [[ ! -d "$temp_dir" ]] && mkdir -p "$temp_dir"

    if [[ "$player" == 'spotify' ]]; then
        url="$(playerctl_with_player metadata mpris:artUrl)"
        image_id="$(echo "$url" | sed 's#.*/image/##')"
        url="https://i.scdn.co/image/$image_id"
        art_file="$temp_dir/spotify-$image_id"

        if [[ ! -f "$art_file" ]]; then
            temp_file="$(mktemp "$temp_dir/XXXXXX")"
            wget "$url" -O "$temp_file" > /dev/null 2>&1
            mv "$temp_file" "$art_file"
        fi
    else
        track_file="$(show_metadata file)"
        art_file="$temp_dir/$(echo "$track_file" | sed 's#/#%#g').png"

        if [[ ! -f "$art_file" ]]; then
            temp_file="$(mktemp "$temp_dir/XXXXXX.png")"
            ffmpeg -y -i "$track_file" -s 48x48 "${temp_file}" > /dev/null 2>&1
            mv "$temp_file" "$art_file"
        fi
    fi

    echo "$art_file"
}

show_metadata() {
    tag="$1"

    if [[ "$tag" = 'artFile' ]]; then
        echo -n "$(get_art_file)"
    else
        if [[ "$player" == 'cmus' ]]; then
            cmus_metadata "$tag"
        else # end of unsupported players
            if [[ "$tag" = 'file' ]]; then
                url="$(playerctl_with_player metadata xesam:url)"
                file="$(urlencode -d "${url#file://}")"
                echo -n "$file"
            else # end of unsupported options
                if [[ -z "$tag" ]]; then
                    playerctl_with_player metadata
                else
                    playerctl_with_player metadata "$tag"
                fi
            fi
        fi
    fi
}

perform_action() {
    action="$1"
    if [[ "$player" == 'cmus' ]]; then
        cmus_perform_action "$action"
    else
        playerctl_with_player "$action"
    fi
}

player="$(list_players | head -1)"

while [[ $# != 0 ]]; do
    case "$1" in
        -p|--player)
            player="$2"
            shift
        ;;
        -l|--list-all)
            list_players
        ;;
        play|pause|play-pause|stop|next|previous|status)
            perform_action "$1"
        ;;
        metadata)
            show_metadata "${@:2}"
            while [[ $# != 0 ]]; do shift; done
        ;;
        *)
            echo "Error: Unknown argument \"$1\""
            exit 1
        ;;
    esac
    shift
done
